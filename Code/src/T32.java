/**
 * Author: zhangxin
 * Time: 2016/11/23 0023.
 * Desc:返回从 1~n这n个整数中,所有位上1出现的次数;
 * 解题思路:
 */
public class T32 {
    // 所有数字中个位上显示为1,十位上显示为1,百位上显示为1。。。;
    public int NumberOf1Between1AndN_Solution(int n) {
        int count = 0;
        int a, b;
        for (int i = 1; i <= n; i *= 10) {
            a = n / i;
            b = n % i;
            count += (a + 8) / 10 * i + (a % 10 == 1 ? b + 1 : 0);
        }
        return count;
    }

    public static void main(String[] args) {
        T32 t = new T32();
        System.out.println(t.NumberOf1Between1AndN_Solution(5));
    }


    //#####详细的理解
    public int NumberOf1Between1AndN_Solution1(int n){
        int count = 0;//计数用的count;
        int a, b;  //a:         b:
        for (int i = 1; i <= n; i *= 10) {  //为什么要这样递增,i的变化是:1=>10=>100=>1000...  这是对应的个位/十位/百位...各个位分别统计;
            a = n / i;  //统计对应位,大头;
            count += (a + 8) / 10 * i ;
            if (a%10 == 1) { //当前这一位正好是1的情况;
                b = n % i;	//统计对应位,小头;
                count += b+1;
            }
        }
        return count;
    }

}

/*
eg:下面以一个两千多的数据为例,并只找特定一位上的,比如说百位的;

n = 2010	判断其百位  200
0100~0199	->100
1100~1199	->100



n = 2110	判断其百位  200 + b + 1
0100~0199	->100
1100~1199	->100
2100~2110	->b+1


n = 2210	判断其百位  300
0100~0199	->100
1100~1199	->100
2100~2199	->100


n = 2310	判断其百位  300
0100~0199	->100
1100~1199	->100
2100~2199	->100


n = 2410	判断其百位  300
0100~0199	->100
1100~1199	->100
2100~2199	->100

## 规律:
当百位是0时: 20/10 *100
当百位是1时: 21/10 *100 + b+1
当百位 >1时: (2x/10+1) *100

所以针对于百位:
(a+8)/10*100  此时:如果百位>1,那么(a+8)就进位了
接下来还要在处理当百位正好是1的情况,百位正好是1,那么再加上 b+1;
 */